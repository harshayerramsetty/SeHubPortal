
@model SeHubPortal.ViewModel.MyStaffViewModel
<style type="text/css">
    #active_status {
        height: 20px;
        width: 20px;
    }
</style>


@using (Html.BeginForm("EditEmployeeInfo", "Management", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="modal-content">
        <div class="modal-header">

            <div class="col-lg-4" style="padding-left:0px !important" >
                <h5 class="modal-title" id="exampleModalLongTitle">
                    @Model.NewEmployee.full_name
                </h5>
            </div>
            <div class="col-lg-4 text-center">
                
                @if (Model.active_status == true)
                {
                    <h5 style="color:#24a0ed;margin:3px 20px 0px 10px">@Html.CheckBoxFor(model => model.active_status, new { htmlAttributes = new {@style = "margin-top:5px;", @class = "form-check-input", @type = "checkbox" } })  Active</h5>
                }
                else
                {
                    <h5 style="color:#24a0ed; margin:3px 20px 0px 10px">@Html.CheckBoxFor(model => model.active_status, new { htmlAttributes = new {@style = "margin-top:5px;",  @class = "form-check-input", @type = "checkbox" } })  Active</h5>
                }
            </div>
            <div class="col-lg-4"></div>

        </div>
        <div class="modal-body">
            <div class="row">

                @if (Model.SehubAccess.my_staff >= 1)
                {
                    <div class="col-md-12">
                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label>Employee ID</label>
                                @Html.EditorFor(model => model.NewEmployee.employee_id, new { htmlAttributes = new { @readonly = "true", @class = "form-control", @type = "text", @required = "required" } })
                            </div>

                            <div class="form-group col-md-3">
                                <label>Loc ID</label>
                                @if (Model.SehubAccess.my_staff >= 3)
                                {
                                    @Html.DropDownListFor(model => model.NewEmployee.loc_ID, Model.MatchedStaffLocs, new { @class = "form-control", @type = "text", @required = "required" })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.NewEmployee.loc_ID, new { htmlAttributes = new { @readonly = "true", @class = "form-control", @type = "text", @required = "required" } })
                                }
                            </div>

                            <div class="form-group col-md-3">
                                <label>Work Number</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.cta_direct_phone, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-3">
                                <label>Cell Number</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.cta_cell, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>Work Email ID</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.cta_email, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Position</label>
                                @*<input type="text" class="form-control">*@
                                @Html.DropDownListFor(model => model.NewEmployee.cta_position, Model.Positions, "select", new { @id = "selectId", @class = "form-control", @required = "required" })
                            </div>

                            <div class="form-group col-md-2">
                                <label>Compensation</label>
                                @*<input type="text" class="form-control">*@
                                @{
                                    List
                                    <SelectListItem>
                                    listItems2 = new List
                                    <SelectListItem>
                                    ();
                                    listItems2.Add(new SelectListItem
                                    {
                                        Text = "Hourly",
                                        Value = "Hourly"
                                    });
                                    listItems2.Add(new SelectListItem
                                    {
                                        Text = "Commission",
                                        Value = "Commission"
                                    });
                                }
                                @Html.DropDownListFor(model => model.CompensationType, listItems2, "select", new { @id = "selectId", @class = "form-control", @required = "required" })
                            </div>


                        </div>
                        <hr style="border:1px thin  black" />
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label>First Name</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.first_name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-2">
                                <label>MI</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.middle_initial, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Last Name</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.last_name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-2">
                                <label>Date of Birth</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployee.Date_of_birth, new { htmlAttributes = new { @id = "DateOFBirth", @style = "width:114px", @class = "form-control", @type = "text" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>Personal Email</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.personal_email, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-3">
                                <label>Primary Phone</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.primary_phone, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-3">
                                <label>Secondary Phone</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.secondary_phone, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>Address 1</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.home_street1, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-6">
                                <label>Address 2</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.home_street2, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>City</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.city, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-2">
                                <label>Province</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.province, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-2">
                                <label>Postal Code</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.postal_code, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-2">
                                <label>Country</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.country, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                        </div>
                        <hr style="border:1px thin  black" />
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label style="color:red">Emergency Contact</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.emergency_contact_name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>
                            <div class="form-group col-md-4">
                                <label style="color:red">Phone Number</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.emergency_contact_number, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                            </div>

                            <div class="form-group col-md-3" style="padding-top:5px; padding-left:20px">
                                <label>Upload Image</label>
                                <input type="file" name="EmployeeImage" style="height:50px" />
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label>Employee start date</label>
                                @*<input type="text" class="form-control">*@
                                @Html.EditorFor(model => model.NewEmployeePersonal.employee_start_date, new { htmlAttributes = new {@class = "form-control", @readonly = true } })
                            </div>
                            <div class="form-group col-md-3">
                                <label style="visibility:hidden">Employee</label>
                                @Html.EditorFor(model => model.NewEmployee.rfid_number, new { htmlAttributes = new { id = "editRfid", @class = "form-control", @required = "required", @readonly = true } })
                            </div>
                            <div class="form-group col-md-1">
                                <label style="visibility:hidden">Employee</label>
                                <button id="clearRfId" type="button" onclick="$('#editRfid').val('No RFID')" class="btn btn-secondary form-control" style="padding:0px">Clear</button>
                            </div>
                            <div class="form-group col-md-4" style="display:flex; justify-content:center; align-items:center">
                                @{
                                    string base64ProfilePic = "";
                                    if (Model.NewEmployee.profile_pic is null)
                                    {
                                        base64ProfilePic = "";
                                    }
                                    else
                                    {
                                        base64ProfilePic = "data:image/png;base64," + Convert.ToBase64String(Model.NewEmployee.profile_pic);
                                    }
                                }


                                @if (base64ProfilePic == "")
                                {
                                    <div style="border:2px solid dimgray">
                                        <img class="imageClass" data-toggle="modal" data-target="#upload" style="border-radius:40px; width:70px; height:70px" src="~/Content/profilepic.jpg" alt="ProfilePic" />
                                    </div>
                                }
                                else
                                {
                                    <div style="border:2px solid dimgray">
                                        <img class="imageClass" data-toggle="modal" data-target="#upload" style="border-radius:30px; width:60px; height:60px" alt="profilePic" src="@base64ProfilePic" />
                                    </div>                                    
                                }


                            </div>
                        </div>

                    </div>
                }



            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal" style="width:80px;">Cancel</button>

            <input type="submit" class="btn btn-success" value="Save" style="width:80px;" />
        </div>
    </div>
}


@if (Model.SehubAccess.my_staff != 3)
{

    <script>

        $(document).ready(function () {


            $('#selectId').change(function(){
                $(this).val(@Model.NewEmployee.loc_ID); 
            });



        });

        
        
    </script>

}

<script>
    $(document).ready(function () {
                       
        var date = $('#DateOFBirth').val();
        date = date.split(" ")[0]
        $('#DateOFBirth').val(date);
    });
</script>