@model SeHubPortal.ViewModel.FileURL
@{
    ViewBag.Title = "Dashboard_man";    
    Layout = "~/Views/Shared/_ManagementLayout.cshtml";
}


<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js"></script>
    <script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js"></script>

    @if (Model.SehubAccess.plant > 0)
    {
        <style>
            #PlantClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.plant > 0)
    {
        <style>
            #PlantClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.tools > 0)
    {
        <style>
            #toolsClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.payroll > 0)
    {
        <style>
            #PayrollClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.fleetTVT > 0)
    {
        <style>
            #FleetTVTClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.treadTracker > 0)
    {
        <style>
            #treadTrackereClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.library_access > 0)
    {
        <style>
            #libraryClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.main > 0)
    {
        <style>
            #mainClicked {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.settings == 3)
    {
        <style>
            #SettingsClicked {
                display: block !important;
            }
        </style>
    }



    @if (Model.SehubAccess.my_staff > 0)
    {
        <style>
            #MyStaffLink {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.attendance > 0)
    {
        <style>
            #AttendanceLink {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.vacation_schedule > 0)
    {
        <style>
            #LeaveSchedulerLink {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.asset_control > 0)
    {
        <style>
            #AssetControlLink {
                display: block !important;
            }
        </style>
    }

    @if (Model.SehubAccess.employee_folder > 0)
    {
        <style>
            #EmployeeFilesLink {
                display: block !important;
            }
        </style>
    }

    <style>

        #DashboardLink {
            display: block !important;
        }

        #ManagementClicked {
            display: block !important;
        }


        #managementBtn {
            font-weight: bold;
        }

        #ManagementClicked {
            background-color: #f0f2f5;
            color: black;
            font-weight: 600;
        }

        #DashboardLink {
            color: black;
            font-weight: 700;
            background-color: #f0f2f5;
        }

        body {
            background-color: #f0f2f5;
            padding: 0px !important;
            margin: 0px !important;
        }

        .card-header h6 {
            color: black;
        }

        .example::-webkit-scrollbar {
            display: none;
        }

        /* Hide scrollbar for IE, Edge and Firefox */
        .example {
            -ms-overflow-style: none; /* IE and Edge */
            scrollbar-width: none; /* Firefox */
        }

        .raphael-group-lVBmqXpj {
            display: none !important;
        }
    </style>
</head>

<body style="overflow-y: hidden; overflow-x: hidden">
    <div class="row">
        <div class="col-md-12">
            <div class="row" style="padding:10px 30px 10px 30px">
                <div class="col-md-4" style="padding:10px 10px 10px 20px; background-color:white; vertical-align:middle">
                    <a href="@Url.Action("Dashboard", "Management")">Management</a> / Dashboard
                </div>
                <div class="col-md-4" style="background-color:white; vertical-align:middle">
                </div>
                <div class="col-md-4 text-right" style="background-color:white; vertical-align:middle; display:flex; align-items:center; justify-content:space-between">
                    <div></div>
                    @using (Html.BeginForm("Dashboard_ChangeLocation", "Management", FormMethod.Post))
                    {
                        @Html.DropDownListFor(m => m.Location_ID, Model.LocationsList, new { @onChange = "this.form.submit()", @class = "text-center", @style = "font-weight:bold; text-align-last: center; width:150px; height:100%;", @required = "required", @id = "Location" }) @*, @onchange = "salesPerformance()"*@
                    }
                </div>
            </div>

            <div class="example" style="height:80vh; overflow-y:auto">

                <div id="loadingWheel" style="width: 100%; height: 80vh; display: flex; justify-content: center; align-items: center;">
                    <img style="width:100px" src="~/Content/giphy.gif" alt="Alternate Text" />
                </div>

                <div class="row" style="margin-bottom:0px">
                    <div class="col-md-12" style="display:flex; justify-content:space-between; padding:10px 20px 0px 30px; align-items:center">

                        <h5><b>Technician Efficiency:</b></h5>
                        <div style="display:none">

                            <div style="display:flex; justify-content:space-around;">
                                <h5 style="margin-right:10px">Year</h5>
                                @Html.DropDownListFor(m => m.Year, Model.Positions, new { @onChange = "techEfficiency()", @class = "text-center", @style = "width:200px; text-align-last: center; font-weight:bold", @id = "year" })
                            </div>
                            <div style="display:flex; justify-content:space-around; margin-right:10px">
                                <h5 style="margin-right:10px">Group</h5>
                                @Html.DropDownListFor(m => m.TechnicianType, Model.TechnicianTypeList, new { @onChange = "techEfficiency()", @class = "text-center", @style = "width:200px; text-align-last: center; font-weight:bold", @id = "techType" })
                            </div>
                            <div style="display:none; justify-content:space-around; margin-right:10px">
                                <h5 style="margin-right:10px">Employee</h5>
                                @Html.DropDownListFor(m => m.Payroll_ID, Model.PayrollIdList, new { @class = "text-center", @style = "display:none; font-weight:bold; text-align-last: center; width:200px;", @required = "required", @id = "employees", @onchange = "techEfficiency()" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top:10px; padding:0px 30px 10px 30px; height:50vh">
                    <div class="col-lg-12" style="padding: 30px ;border: 2px solid dimgray;border-radius: 15px;background-color: white">
                        <div id="chart-container_efficiency">

                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top:50px; margin-bottom:10px">
                    <div class="col-md-12" style="display:flex; justify-content:space-between; padding:20px 30px 0px 30px; align-items:center">

                        <h5><b>Sales Performance:</b></h5>

                        <div style="display:none; justify-content:space-around;">
                            <h5 style="margin-right:10px">Year</h5>
                            @Html.DropDownListFor(m => m.Year, Model.Positions, new { @onChange = "salesPerformance()", @class = "text-center", @style = "width:200px; text-align-last: center; font-weight:bold", @id = "yearSales" })
                        </div>
                    </div>
                </div>

                <div class="row" style="margin-bottom: 80px;padding: 0px 30px 10px 30px;height: 50vh">
                    <div class="col-lg-12" style="padding: 30px ;border: 2px solid dimgray;border-radius: 15px;background-color: white">
                        <div id="chart-container_sales">

                        </div>
                    </div>
                </div>

                

            </div>

        </div>
    </div>

    <div class="modal fade" id="Document" tabindex="-1" role="dialog" aria-labelledby="DocumentLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" style="height:980px; width:900px">
                <div class="modal-body" style="padding:0px">
                    <div>
                        <iframe id="modal_content" src="" style="width:100%;height:980px;"></iframe>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            techEfficiency();
            salesPerformance();
            $('#loadingWheel').css('display', 'none')
        });

        function techEfficiency() {
            var emp_id = $('#employees').val();
            var year = $('#year').val();
            var loc_id = $('#Location').val();
            var techType = $('#techType').val();

            var effInfo = "";

            if (emp_id == "All") {
                $.ajax({
                    url: '@Url.Action("TechnicianEfficiencyPerPayrollAll", "Management")',
                    data: { loc: loc_id, year: year, tech: techType },
                    async: false,
                    success: function (data) {
                        effInfo = data;
                    }
                });

                var payIDs = effInfo.split('~')[0].split(';');
                var effPerc = effInfo.split('~')[1].split(',');


                var payrollIDData = [
                ];

                for (i = 0; i < payIDs.length; i++) {
                    payrollIDData.push({label: payIDs[i].substring(2, 4)})
                }

                var percentData = [
                ];

                var jsn = JSON.parse(effPerc);

                var items = [];

                for (i = 0; i < jsn.length; i++) {
                    items.push({ seriesname: jsn[i].component, data: calculatePercentages(jsn[i].color)})
                }


                $('#tech').css("background-color", "#3088fc").css("color", "white")
                $('#sales').css("background-color", "white").css("color", "black")


                var percent = "";
                $.ajax({
                    url: '@Url.Action("TechnicianEfficiency", "Management")',
                    data: { emp: emp_id, year: year },
                    async: false,
                    success: function (data) {
                        percent = data;
                    }
                });

                const dataSource = {
                    chart: {
                        yaxisname: "Efficiency %",
                        showhovereffect: "1",
                        numbersuffix: "",
                        drawcrossline: "1",
                        plottooltext: "<b>$dataValue</b>",
                        theme: "fusion",
                        "legendIconSides": "5",
                        "legendIconStartAngle": "60",
                    },
                    categories: [
                        {
                            category: [
                            {
                              label: "01"
                            },
                            {
                              label: "Jan"
                            },
                            {
                              label: "03"
                            },
                            {
                                label: "Feb"
                            },
                            {
                              label: "05"
                            },
                            {
                              label: "Mar"
                            },
                            {
                              label: "07"
                            },
                            {
                              label: "Apr"
                            },
                            {
                              label: "09"
                            },
                            {
                              label: "May"
                            },
                            {
                              label: "11"
                            },
                            {
                              label: "Jun"
                            },
                            {
                              label: "13"
                            },
                            {
                              label: "Jul"
                            },
                            {
                              label: "15"
                            },
                            {
                              label: "Aug"
                            },
                            {
                              label: "17"
                            },
                            {
                              label: "Sept"
                            },
                            {
                              label: "19"
                            },
                            {
                              label: "Oct"
                            },
                            {
                              label: "21"
                            },
                            {
                              label: "Nov"
                            },
                            {
                              label: "23"
                            },
                            {
                              label: "Dec"
                            }
                          ]
                        }
                    ],
                    dataset: items
                };

                FusionCharts.ready(function () {
                    var myChart = new FusionCharts({
                        type: "msline",
                        renderAt: "chart-container_efficiency",
                        width: "100%",
                        height: "100%",
                        dataFormat: "json",
                        dataSource
                    }).render();
                });

            }
            else {
                $.ajax({
                    url: '@Url.Action("TechnicianEfficiencyPerPayroll", "Management")',
                    data: { emp: emp_id, year: year },
                    async: false,
                    success: function (data) {
                        effInfo = data;
                    }
                });

                var payIDs = effInfo.split('~')[0].split(';');
                var effPerc = effInfo.split('~')[1].split(';');

                var payrollIDData = [
                ];

                for (i = 0; i < payIDs.length; i++) {
                    payrollIDData.push({label: payIDs[i].substring(2, 4)})
                }

                var percentData = [
                ];

                for (i = 0; i < effPerc.length; i++) {
                    percentData.push({value: effPerc[i]})
                }

                //alert(percentData);

                $('#tech').css("background-color", "#3088fc").css("color", "white")
                $('#sales').css("background-color", "white").css("color", "black")


                var percent = "";
                $.ajax({
                    url: '@Url.Action("TechnicianEfficiency", "Management")',
                    data: { emp: emp_id, year: year },
                    async: false,
                    success: function (data) {
                        percent = data;
                    }
                });

                const dataSource = {
                    chart: {
                        yaxisname: "Efficiency %",
                        showhovereffect: "1",
                        numbersuffix: "",
                        drawcrossline: "1",
                        plottooltext: "<b>$dataValue</b>",
                        theme: "fusion"
                    },
                    categories: [
                        {
                            category: payrollIDData
                        }
                    ],
                    dataset: [
                        {
                            seriesname: "Technician Efficiency",
                            data: percentData
                        }
                    ]
                };

                FusionCharts.ready(function () {
                    var myChart = new FusionCharts({
                        type: "msline",
                        renderAt: "chart-container_efficiency",
                        width: "100%",
                        height: "100%",
                        dataFormat: "json",
                        dataSource
                    }).render();
                });
            }



        }

        function calculatePercentages(effInfo) {
            var percentData = [];
            effInfo.split(';').forEach(function (data) {
                percentData.push({value: data})
            })
            return percentData;
        }

        function salesPerformance() {
            var loc_id = $('#Location').val();
            var year = $('#yearSales').val();
            var sales = "";
            $.ajax({
                url: '@Url.Action("getSalesOfLocation", "Management")',
                data: { loc: loc_id, yar: year },
                async: false,
                success: function (data) {
                    sales = data;
                }
            });
            var arr = sales.split('~')[0].split(';');
            var arrp = sales.split('~')[1].split(';');
            $('#sales').css("background-color", "#3088fc").css("color", "white")
            $('#tech').css("background-color", "white").css("color", "black")
            const dataSource = {
                chart: {
                    caption: "Sales Summary",
                    xaxisname: "Months",
                    yaxisname: "Sales ($ k)",
                    formatnumberscale: "1",
                        /*
                         plottooltext:
                          "<b>$dataValue</b> apps were available on <b>$seriesName</b> in $label",
                         */
                    theme: "fusion",
                    drawcrossline: "1"
                },
                categories: [
                    {
                        category: [
                            {
                              label: "January"
                            },
                            {
                              label: "February"
                            },
                            {
                              label: "March"
                            },
                            {
                              label: "April"
                            },
                            {
                              label: "May"
                            },
                            {
                              label: "June"
                            },
                            {
                              label: "July"
                            },
                            {
                              label: "August"
                            },
                            {
                              label: "September"
                            },
                            {
                              label: "October"
                            },
                            {
                              label: "November"
                            },
                            {
                              label: "December"
                            }
                        ]
                    }
                ],
                dataset: [
                    {
                        seriesname: String(parseInt(year)-1),
                        data: [
                            {
                                value: arrp[0]
                            },
                            {
                                value: arrp[1]
                            },
                            {
                                value: arrp[2]
                            },
                            {
                                value: arrp[3]
                            },
                            {
                                value: arrp[4]
                            },
                            {
                                value: arrp[5]
                            },
                            {
                                value: arrp[6]
                            },
                            {
                                value: arrp[7]
                            },
                            {
                                value: arrp[8]
                            },
                            {
                                value: arrp[9]
                            },
                            {
                                value: arrp[10]
                            },
                            {
                                value: arrp[11]
                            }
                        ]
                    },
                    {
                        seriesname: year,
                        data: [
                            {
                                value: arr[0]
                            },
                            {
                                value: arr[1]
                            },
                            {
                                value: arr[2]
                            },
                            {
                                value: arr[3]
                            },
                            {
                                value: arr[4]
                            },
                            {
                                value: arr[5]
                            },
                            {
                                value: arr[6]
                            },
                            {
                                value: arr[7]
                            },
                            {
                                value: arr[8]
                            },
                            {
                                value: arr[9]
                            },
                            {
                                value: arr[10]
                            },
                            {
                                value: arr[11]
                            }
                        ]
                    }

                ]
            };

                FusionCharts.ready(function() {
                  var myChart = new FusionCharts({
                    type: "mscolumn2d",
                    renderAt: "chart-container_sales",
                    width: "100%",
                    height: "100%",
                    dataFormat: "json",
                    dataSource
                  }).render();
                });
            }

    </script>

    <script>
        $('#div a').click(function (e) {
            e.preventDefault()
            $that = $(this);
            $that.parent().find('a');
            var seleccionado = $(this).children("span").html();
            console.log(seleccionado);
            $('#modal_content').attr('src', seleccionado);
        });
    </script>


</body>
</html>


