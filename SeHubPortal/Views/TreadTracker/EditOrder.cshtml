
@{
    ViewBag.Title = "EditOrder";
    //Layout = "~/Views/Shared/_TreadTrackerLayout.cshtml";
}
@model SeHubPortal.ViewModel.EditOrderModel
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>

    <link href="~/Content/NewOrder.css" rel="stylesheet" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    @*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>*@


    <style type="text/css">

        body {
            background-color: #f0f2f5;
        }

        .heading {
            margin: 10px 0px 0px 0px;
        }

            .heading h2 {
                margin-top: 8px;
            }

        .orderMainBody {
            margin: 0px 15px 0px 15px;
        }

        .subHeading {
            text-align: center;
            background-color: #e9ecef;
            margin: 15px 0px 0px 0px;
            color: gray;
        }

        .subTables {
            margin: 0px 0px 0px 0px;
        }

        .tableBorders {
            border-style: solid;
            border-width: thin;
            margin: 0px 0px 0px 0px;
            border-color: #e9ecef;
            color: black;
        }

        thead th {
            /*font-size: 1em;*/
            padding: 1px !important;
            height: 25px;
            font-size: 13px;
        }

        .mainTable {
            margin: 5px 0px 0px 0px;
        }

        .textFields {
            text-align: center;
        }

        input {
            text-align: center;
            visibility: visible;
            height: 30px;
        }

        .lineStyle {
            width: 60px;
            visibility: visible;
            height: 32px;
        }

        .LineValues {
            width: 60px;
        }

        .SerialValues {
            text-transform: uppercase;
        }


        input, select {
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
        }

        .commentsHeader {
            background-color: #343a40;
            margin: 0px 0px 0px 0px;
            font-size: 1em;
            padding: 1px !important;
            height: 25px;
        }

        .TableTransactions {
            margin: 0px 0px 0px 0px;
        }

            .TableTransactions button {
                margin: 0px 0px 0px 10px;
            }

        .transcationButtons {
            margin: 0px 0px 0px 0px;
            border-radius: 5px;
            width: 90px;
            height: 35px;
        }

        .commentsSection {
            margin: 10px 0px 0px 0px;
        }

        #comments {
            width: 100%;
            height: 80px;
            box-sizing: border-box;
        }

        #NewOrderSubmit {
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            background-color: #343a40;
            border-color: #343a40;
        }

        .SearchInputs {
            width: 100%;
            visibility: visible;
            border-color: black;
            border-width: 2px;
        }

        .generateBtn {
            width: 100%;
            visibility: visible;
        }

        #CustId {
            visibility: visible;
        }

        #WorkOrderNumber {
            width: 100%;
            visibility: visible;
            border-color: black;
            border-width: 2px;
        }

        #DropDownClass {
            border-color: transparent;
            background-color: transparent;
        }

        .example::-webkit-scrollbar {
            display: none;
        }

        /* Hide scrollbar for IE, Edge and Firefox */
        .example {
            -ms-overflow-style: none; /* IE and Edge */
            scrollbar-width: none; /* Firefox */
        }

        select {
            height:20px;
            width:150px;
        }

        input[type=text] {
            height:20px;
            margin:0px
        }

    </style>
</head>
<body>

    @using (Html.BeginForm("SubmitEditOrder", "TreadTracker", FormMethod.Post))
    {
        <div class="card-header" style="padding:3px 15px; background-color:white !important; font-size:25px; font-weight:bolder">
            Edit Work Order
        </div>
        <div class="card-body" style="padding:0px">
            <div>
                <div class="row">
                    <div class="col-md-12">
                        <div>
                            @*class="shadow-lg p-3 mb-5 bg-white rounded"*@

                            <div class="orderMainBody">
                                @*here i remove class - container*@
                                @*
          <div class="row justify-content-end TableTransactions">
            <input type="submit" class="btn btn-success transcationButtons" style="visibility:visible" value="Save" />
            &nbsp;
            <a href="@Url.Action("CanceEditOrderOrder", "TreadTracker", new { workOrder = @Model.WorkOrderInfo.retread_workorder.ToString()})">
                <input type="button" class="btn btn-danger transcationButtons" style="visibility:visible" value="Cancel" />
            </a>
        </div>
                                *@
                                <div class="row justify-content-between">
                                    


                                    <div class="col-md-5" style="padding-right:6px">
                                        <div class="card shadow-sm flex-fill grow" style="margin:10px 0px 0px 0px;">
                                            <div class="card-body" style="background-color:white; padding-top:10px; padding-bottom:10px">
                                                <div class="row" style="padding-left:15px">
                                                    <div class="col-md-3" style="display:flex; justify-content:center; align-items:center">
                                                        <img style="width:90%; height:90%; object-fit:contain" src="~/Content/trdIcon.png" alt="Alternate Text" />
                                                    </div>
                                                    <div class="col-md-9">
                                                        <div class="row">
                                                            <h4>Tread Tracker</h4>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-5" style="padding:2px">
                                                                Work Order #
                                                            </div>
                                                            <div class="col-md-7" style="padding-left:3px !important">
                                                                <b>@Model.WorkOrderInfo.retread_workorder</b>
                                                                <div style="display:none">
                                                                    @Html.HiddenFor(m => m.WorkOrderInfo.retread_workorder)
                                                                    @Html.HiddenFor(m => m.CustomerInfo.CustomerName)
                                                                    @Html.HiddenFor(m => m.CustomerInfo.CustomerCode)
                                                                    @Html.HiddenFor(m => m.CustomerInfo.Address1)
                                                                    @Html.HiddenFor(m => m.WorkOrderInfo.creation_date)
                                                                    @Html.DropDownListFor(m => m.ChangedCustomerId, Model.CustomersList)
                                                                    @Html.DisplayFor(m => m.WorkOrderInfo.creation_date)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-5" style="padding:2px">
                                                                Creation Date
                                                            </div>
                                                            @*<div class="col-lg-8" style="height:1px; padding:0px !important;">
                                    @Html.DisplayFor(m => m.WorkOrderInfo.creation_date)
                                </div>*@
                                                            <div class="col-md-7" style="height:1px; padding:0px !important;">
                                                                @if (Model.WorkOrderInfo.creation_date.HasValue)
                                                                {
                                                                    @Model.WorkOrderInfo.creation_date.Value.ToString("dddd - MMM dd, yyyy")
                                                                }
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7" style="padding-left:6px">
                                        <div class="card shadow-sm flex-fill grow" style="margin:10px 0px 0px 0px;">
                                            <div class="card-body" style="padding-top:10px; padding-bottom:10px">
                                                <div class="row" style="padding:0px 15px 0px 15px">
                                                    <div class="col-lg-7" style="padding:0px">
                                                        <h4>@Model.CustomerInfo.CustomerName</h4>
                                                    </div>
                                                    <div class="col-lg-5 text-right" style="padding:0px">
                                                        <h4>@Model.CustomerInfo.CustomerCode</h4>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-6">
                                                        <div class="row" style="margin-bottom:5px">
                                                            <div class="col-lg-6">
                                                                Contact
                                                            </div>
                                                            <div class="col-lg-6">

                                                            </div>
                                                        </div>
                                                        <div class="row" style="margin-bottom:5px">
                                                            <div class="col-lg-6">
                                                                Email
                                                            </div>
                                                            <div class="col-lg-6">

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-6 text-right" style="padding-right:15px">
                                                        <div class="row" style="margin-bottom:5px">
                                                            <div class="col-lg-12 text-right">
                                                                @Model.CustomerInfo.Address1 @Model.CustomerInfo.Address2
                                                            </div>
                                                        </div>
                                                        <div class="row" style="margin-bottom:5px">
                                                            <div class="col-lg-12 text-right">
                                                                @Model.CustomerInfo.Address2, @Model.CustomerInfo.Address3 @Model.CustomerInfo.Postcode Canada
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card shadow-sm flex-fill grow" style="margin:10px 0px 0px 0px;">
                                    <div class="card-header" style="padding:3px 3px 3px 15px">
                                        <h6 class="card-title mb-0 d-inline-block">Order Details</h6>
                                    </div>
                                    <div class="card-body" style="padding:5px 15px 0px 15px">

                                        <table class="table table-striped" style="margin-bottom:0px">
                                            @*removing class   table-bordered*@
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px; margin:0px;" class="text-center">#</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Code</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Barcode</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Serial/DOT</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Size</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Brand</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Virgin</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Tread</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Unit ID</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Status</th>
                                                    <th scope="col" style="height:18px; font-size:10px; padding:0px !important; margin:0px;" class="text-center">Production Progress</th>
                                                </tr>
                                            </thead>
                                            <tbody class="textFields" style="font-size:13px">
                                                @{
                                                    var incVal = 0;
                                                }
                                                @*@foreach (var barcodes in Model.BarcodeInformation)*@
                                                @for (int i = 0; i < Model.BarcodeInformation.Count; i++)
                                                {
                                                    var j = i + 1;
                                                    <tr>
                                                        <td style="padding:0px 10px; vertical-align:middle">@(++incVal)</td>
                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="line1" name="line1" maxlength="2" onkeypress="return onlyNumberKey(event)" class="lineStyle" onfocusout="line1Out()">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.line_code)*@
                                                            @if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                            {
                                                                @Html.EditorFor(m => m.BarcodeInformation[i].line_code, new { htmlAttributes = new { @style = "outline:none; background-color:#e6e8eb; border-color:transparent", @readonly = "true", @class = "LineValues", @type = "text", @maxlength = "2", @id = "Line" + j + "Value", @onkeypress = "return onlyNumberKey(event)", @onfocusout = "line" + j + "Out()" } })
                                                            }
                                                            else
                                                            {
                                                                @Html.EditorFor(m => m.BarcodeInformation[i].line_code, new { htmlAttributes = new { @class = "LineValues", @type = "text", @maxlength = "2", @id = "Line" + j + "Value", @onkeypress = "return onlyNumberKey(event)", @onfocusout = "line" + j + "Out()" } })
                                                            }
                                                        </td>
                                                        <td style="display:none; padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="barcode1" name="barcode1" maxlength="8" onkeypress="return onlyNumberKey(event)">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.barcode)*@
                                                            @Html.HiddenFor(m => m.BarcodeInformation[i].barcode, new { htmlAttributes = new { @maxlength = "8", @onkeypress = "return onlyNumberKey(event)", } })
                                                        </td>
                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="barcode1" name="barcode1" maxlength="8" onkeypress="return onlyNumberKey(event)">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.barcode)*@
                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.EditorFor(m => m.BarcodeInformation[i].changed_barcode, new { htmlAttributes = new { @id = "barcode" + j, @style = "width:120px; visibility:hidden", @maxlength = "8", @onkeypress = "return onlyNumberKey(event)" } })
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result == null && Model.BarcodeInformation[i].ndt_machine_result == null && Model.BarcodeInformation[i].buffer_builder_result == null)
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].changed_barcode, new { htmlAttributes = new { @id = "barcode" + j, @style = "width:120px", @maxlength = "8", @onkeypress = "return onlyNumberKey(event)" } })
                                                                }
                                                                else
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].changed_barcode, new { htmlAttributes = new { @id = "barcode" + j, @style = "outline:none; background-color:#e6e8eb; width:120px; border-color:transparent", @readonly = "true", @maxlength = "8", @onkeypress = "return onlyNumberKey(event)" } })
                                                                }
                                                            }


                                                        </td>
                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="serial1" name="serial1" maxlength="8" style="text-transform:uppercase">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.serial_dot)*@

                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.EditorFor(m => m.BarcodeInformation[i].serial_dot, new { htmlAttributes = new { @id = "serial" + j + "", @class = "SerialValues", @style = "width:120px; visibility: hidden" } })
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].serial_dot, new { htmlAttributes = new { @style = "outline:none; background-color:#e6e8eb; border-color:transparent; width:120px", @readonly = "true", @class = "SerialValues", } })
                                                                }
                                                                else
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].serial_dot, new { htmlAttributes = new { @class = "SerialValues", @style = "width:120px" } })
                                                                }
                                                            }


                                                        </td>
                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<div id="casing1Div"></div>*@
                                                            @*@Html.DropDownListFor(modelItem => barcodes.casing_size, new SelectList(ViewBag.CasingSizeList, "size_id", "casing_size", barcodes.size_id))*@

                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_size, new SelectList(ViewBag.CasingSizeList, "size_id", "casing_size", Model.BarcodeInformation[i].size_id), "--Select--", new { @style = "visibility:hidden", @id = "casing" + j + "" })
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_size, new SelectList(ViewBag.CasingSizeList, "size_id", "casing_size", Model.BarcodeInformation[i].size_id), new { @class = "text-center", @style = "outline:none; background-color:#e6e8eb; border-color:transparent; outline:none", @id = "casing" + j + "size" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_size, new SelectList(ViewBag.CasingSizeList, "size_id", "casing_size", Model.BarcodeInformation[i].size_id), new { htmlAttributes = new { @id = "casing" + j + "size" } })
                                                                }
                                                            }



                                                        </td>


                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<div id="Brand1Div"></div>*@
                                                            @*@Html.EditorFor(modelItem => barcodes.casing_brand)*@
                                                            @*@Html.DropDownListFor(modelItem => barcodes.casing_brand, new SelectList(ViewBag.CasingBrandList, "brand_id", "casing_brand", barcodes.brand_id))*@

                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_brand, new SelectList(ViewBag.CasingBrandList, "brand_id", "casing_brand", Model.BarcodeInformation[i].brand_id), "--Select--", new { @id = "brand" + j + "", style = "visibility:hidden" })
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_brand, new SelectList(ViewBag.CasingBrandList, "brand_id", "casing_brand", Model.BarcodeInformation[i].brand_id), new { @class = "text-center", @style = "outline:none; background-color:#e6e8eb; border-color:transparent; outline:none" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].casing_brand, new SelectList(ViewBag.CasingBrandList, "brand_id", "casing_brand", Model.BarcodeInformation[i].brand_id))
                                                                }
                                                            }

                                                        </td>

                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="barcode1" name="barcode1" maxlength="8" onkeypress="return onlyNumberKey(event)">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.barcode)*@
                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.CheckBoxFor(m => m.BarcodeInformation[i].virgin, new { @style = "visibility:hidden" })
                                                            }
                                                            else
                                                            {
                                                                @Html.CheckBoxFor(m => m.BarcodeInformation[i].virgin, new { @style = "visibility:visible" })
                                                            }
                                                        </td>

                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<div id="Tread1Div"></div>*@
                                                            @*@Html.EditorFor(modelItem => barcodes.retread_design)*@
                                                            @*@Html.DropDownListFor(modelItem => barcodes.retread_design, new SelectList(ViewBag.CasingTreadList, "tread_id", "tread_design", barcodes.tread_id))*@

                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.DropDownListFor(m => m.BarcodeInformation[i].retread_design, new SelectList(ViewBag.CasingTreadList, "tread_design", "tread_design", Model.BarcodeInformation[i].tread_id), new { @id = "tread" + j + "", @style = "visibility:hidden", htmlAttributes = new { @required = "required" } });
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].retread_design, new SelectList(ViewBag.CasingTreadList, "tread_design", "tread_design", Model.BarcodeInformation[i].tread_id), Model.BarcodeInformation[i].retread_design, new { @class = "text-center", @style = "outline:none; background-color:#e6e8eb; border-color:transparent; outline:none" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.DropDownListFor(m => m.BarcodeInformation[i].retread_design, new SelectList(ViewBag.CasingTreadList, "tread_design", "tread_design", Model.BarcodeInformation[i].tread_id), Model.BarcodeInformation[i].retread_design, new { htmlAttributes = new { @required = "required" } })
                                                                }
                                                            }


                                                        </td>
                                                        <td style="padding:0px; vertical-align:middle">
                                                            @*<input type="text" id="unit1" name="unit1" onkeypress="return onlyNumberKey(event)">*@
                                                            @*@Html.EditorFor(modelItem => barcodes.unit_ID)*@

                                                            @if (Model.BarcodeInformation[i].barcode == null)
                                                            {
                                                                @Html.EditorFor(m => m.BarcodeInformation[i].unit_ID, new { htmlAttributes = new { @id = "unit" + j + "", @style = "width:120px; visibility:hidden" } });
                                                            }
                                                            else
                                                            {
                                                                if (Model.BarcodeInformation[i].final_inspection_result != null && Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].unit_ID, new { htmlAttributes = new { @style = "outline:none; background-color:#e6e8eb; border-color:transparent; width:120px", @readonly = "true" } })
                                                                }
                                                                else
                                                                {
                                                                    @Html.EditorFor(m => m.BarcodeInformation[i].unit_ID, new { htmlAttributes = new { @style = "width:120px" } })
                                                                }
                                                            }


                                                        </td>

                                                        <td style="padding:0px; vertical-align:middle">
                                                            @if (Model.BarcodeInformation[i].final_inspection_result == null)
                                                            {
                                                                if (Model.BarcodeInformation[i].buffer_builder_result == null)
                                                                {
                                                                    if (Model.BarcodeInformation[i].ndt_machine_result == null)
                                                                    {
                                                                        @Model.BarcodeInformation[i].preliminary_inspection_result
                                                                    }
                                                                    else
                                                                    {
                                                                        @Model.BarcodeInformation[i].ndt_machine_result
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @Model.BarcodeInformation[i].buffer_builder_result
                                                                }

                                                            }
                                                            else
                                                            {
                                                                @Model.BarcodeInformation[i].final_inspection_result
                                                            }

                                                        </td>

                                                        @if (Model.BarcodeInformation[i].barcode != null)
                                                        {
                                                            <td style="width:270px; padding:0px; vertical-align:middle">
                                                                @if (Model.BarcodeInformation[i].final_inspection_result == null)
                                                                {
                                                                    if (Model.BarcodeInformation[i].buffer_builder_result == null)
                                                                    {
                                                                        if (Model.BarcodeInformation[i].ndt_machine_result == null)
                                                                        {
                                                                            if (Model.BarcodeInformation[i].preliminary_inspection_result.ToUpper() == "GOOD")
                                                                            {
                                                                                <div class="progress" style="margin:0px 10px">
                                                                                    <div class="progress-bar bg-success  progress-bar-animated" role="progressbar" style="width:25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                                                                </div>

                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="progress" style="margin:0px 10px">
                                                                                    <div class="progress-bar bg-danger  progress-bar-animated" role="progressbar" style="width:25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                                                                </div>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (Model.BarcodeInformation[i].ndt_machine_result.ToUpper() == "GOOD")
                                                                            {
                                                                                <div class="progress" style="margin:0px 10px">
                                                                                    <div class="progress-bar bg-success  progress-bar-animated" role="progressbar" style="width:50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="progress" style="margin:0px 10px">
                                                                                    <div class="progress-bar bg-danger  progress-bar-animated" role="progressbar" style="width:50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                                                                </div>
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        if (Model.BarcodeInformation[i].buffer_builder_result.ToUpper() == "GOOD")
                                                                        {
                                                                            <div class="progress" style="margin:0px 10px">
                                                                                <div class="progress-bar bg-success  progress-bar-animated" role="progressbar" style="width:75%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="progress" style="margin:0px 10px">
                                                                                <div class="progress-bar bg-danger  progress-bar-animated" role="progressbar" style="width:75%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
                                                                            </div>
                                                                        }

                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    if (Model.BarcodeInformation[i].final_inspection_result.ToUpper() == "GOOD")
                                                                    {
                                                                        <div class="progress" style="margin:0px 10px">
                                                                            <div class="progress-bar bg-success progress-bar-animated" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="progress" style="margin:0px 10px">
                                                                            <div class="progress-bar bg-danger progress-bar-animated" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                                                                        </div>
                                                                    }

                                                                }

                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td style="width:270px; padding:0px; vertical-align:middle">
                                                            </td>
                                                        }


                                                    </tr>

                                                }
                                            </tbody>

                                        </table>

                                        <div class="row" style="color:#b4b6b8; padding:10px">
                                            <div class="col-md-12" style="display:flex; justify-content:space-evenly; align-items:center">
                                                <span>1 - RET (Retread Only)</span>
                                                <span>5 - RPO (Repair Only)</span>
                                                <span>6 - CCR (Casing Credit)</span>
                                                <span>7 - ADJ (Adjustment)</span>
                                                <span>9 - SCP (Scrap)</span>
                                                <span>10 - Bank (Bank/Pool)</span>
                                                <span>11 - STK (Stock)</span>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                @*//Here begin form*@

                                <div class="card shadow-sm flex-fill grow" style="margin:10px 0px 10px 0px;">
                                    <div class="card-header" style="padding:3px 3px 3px 15px">
                                        <h6 class="card-title mb-0 d-inline-block">Comments</h6>
                                    </div>
                                    <div class="card-body" style="padding:10px">
                                        <div style="width:100%">
                                            @Html.TextAreaFor(m => m.WorkOrderInfo.comments, new { @style="width:100%; height:80px", @id="comments"})
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer" style="display:flex; justify-content:space-between; padding:10px 15px">
            <div></div>
            <div>
                <button type="submit" id="submitButton" class="btn btn-success" style="padding:0px 25px; margin-right:6px">Save</button>
                <button type="button" id="Cancelbutton" class="btn btn-danger" data-dismiss="modal" style="padding:0px 15px 0px 15px">Cancel</button>
            </div>
        </div>
    }



    <script>

        $('#Cancelbutton').click(function () {
            //location.reload();
            //$('#sideloading').css('display', 'block').css('background-color', '#f0f2f5')
            //$('#TreadTrackerArea').css('display', 'none')
            $('.body').css('background-color', '#f0f2f5')
        });

        $(document).ready(function () {

            $(document).on('keyup keypress', 'form input[type="text"]', function(e) {
              if(e.which == 13) {
                e.preventDefault();
                return false;
              }
            });
        });

        $('#submitButton').click(function () { 
            $("#BarcodeInformation_"+"1"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"2"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"3"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"4"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"5"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"6"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"7"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"8"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"9"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"10"+"__retread_design").prop('disabled', false);
            $("#BarcodeInformation_"+"11"+"__retread_design").prop('disabled', false);
        })

        function onlyNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }

        function line1Out() {
            var lineValue = document.getElementById("Line1Value").value;
            commonLineFunction("1", lineValue);
            document.getElementById("barcode1").focus();
        }

        function line2Out() {
            var lineValue = document.getElementById("Line2Value").value;
            commonLineFunction("2", lineValue);
            document.getElementById("barcode2").focus();
        }

        function line3Out() {
            var lineValue = document.getElementById("Line3Value").value;
            commonLineFunction("3", lineValue);
            document.getElementById("barcode3").focus();
        }

        function line4Out() {
            var lineValue = document.getElementById("Line4Value").value;
            commonLineFunction("4", lineValue);
            document.getElementById("barcode4").focus();
        }

        function line5Out() {
            var lineValue = document.getElementById("Line5Value").value;
            commonLineFunction("5", lineValue);
            document.getElementById("barcode5").focus();
        }

        function line6Out() {
            var lineValue = document.getElementById("Line6Value").value;
            commonLineFunction("6", lineValue);
            document.getElementById("barcode6").focus();
        }

        function line7Out() {
            var lineValue = document.getElementById("Line7Value").value;
            commonLineFunction("7", lineValue);
            document.getElementById("barcode7").focus();
        }

        function line8Out() {
            var lineValue = document.getElementById("Line8Value").value;
            commonLineFunction("8", lineValue);
            document.getElementById("barcode8").focus();
        }

        function line9Out() {
            var lineValue = document.getElementById("Line9Value").value;
            commonLineFunction("9", lineValue);
            document.getElementById("barcode9").focus();
        }

        function line10Out() {
            var lineValue = document.getElementById("Line10Value").value;
            commonLineFunction("10", lineValue);
            document.getElementById("barcode10").focus();
        }

        function line11Out() {
            var lineValue = document.getElementById("Line11Value").value;
            commonLineFunction("11", lineValue);
            document.getElementById("barcode11").focus();
        }


        function commonLineFunction(lineNum, lineValue) {

            var correctedLineNumber = parseInt(lineNum) - 1;
            var stringcorrectedLineNumber = correctedLineNumber.toString();

            var barcode = "barcode" + lineNum;
            var serial = "serial" + lineNum;
            var casing = "casing" + lineNum;
            var brand = "brand" + lineNum;
            var tread = "tread" + lineNum;
            var unit = "unit" + lineNum;
            
            if (lineValue == 1 || lineValue == 5 || lineValue == 6 || lineValue == 7 || lineValue == 9 || lineValue == 10 || lineValue == 11) {

                
                

                if (lineNum != 1) {
                    if (document.getElementById(barcode).value.length == 0) {
                        var barcodeValue = checkBarcodes();                        
                        document.getElementById(barcode).value = barcodeValue;
                    }
                }


                document.getElementById(barcode).style.visibility = "visible";
                document.getElementById(serial).style.visibility = "visible";
                document.getElementById(casing).style.visibility = "visible";
                document.getElementById(brand).style.visibility = "visible";
                document.getElementById(unit).style.visibility = "visible";
                document.getElementById(tread).style.visibility = "visible";
                document.getElementById("BarcodeInformation_" + correctedLineNumber +"__virgin").style.visibility = "visible";


                if (lineValue != 5) {
                    document.getElementById(casing).style.visibility = "visible";
                }
                else {
                    document.getElementById(casing).style.visibility = "hidden";
                    $("#"+casing).prop('disabled', true);
                }

                if (lineValue != 1 || lineValue != 11) {
                    if (lineValue == 5) {
                        $("#"+tread).val("39").prop('disabled', true);
                    }
                    else if (lineValue == 6) {
                        $("#"+tread).val("40").prop('disabled', true);
                    }
                    else if (lineValue == 7) {
                        $("#"+tread).val("41").prop('disabled', true);
                    }
                    else if (lineValue == 9) {
                        $("#"+tread).val("42").prop('disabled', true);
                    }
                    else if (lineValue == 10) {
                        $("#"+tread).val("40").prop('disabled', true);
                    }
                    else {
                        $("#"+tread).val("1").prop('disabled', false);
                    }
                }
                else {
                    $("#"+tread).removeAttribute("readonly");
                }

            }
            else {
                document.getElementById(barcode).value = null;
                document.getElementById(serial).value = null;
                document.getElementById(casing).value = "--Select--";
                document.getElementById(brand).value = "--Select--";
                document.getElementById(tread).value = "--Select--";
                document.getElementById(unit).value = null;


                document.getElementById(barcode).style.visibility = "hidden";
                document.getElementById(serial).style.visibility = "hidden";
                document.getElementById(casing).style.visibility = "hidden";
                document.getElementById(brand).style.visibility = "hidden";
                document.getElementById(unit).style.visibility = "hidden";
                document.getElementById(tread).style.visibility = "hidden";
                document.getElementById("BarcodeInformation_" + correctedLineNumber +"__virgin").style.visibility = "hidden";

                var test = "line2";
                console.log(document.getElementById(line).value.length)
                console.log(document.getElementById(line).value)
                if (document.getElementById(line).value.length != 0) {

                    alert("Invalid Entry. Valid entries: 1,5,6,7,9,10 and 11.");
                }
                //document.getElementById(line).focus();

            }
        }

        function checkBarcodes() {
            var barcode1 = document.getElementById("barcode1").value;
            var barcode2 = document.getElementById("barcode2").value;
            var barcode3 = document.getElementById("barcode3").value;
            var barcode4 = document.getElementById("barcode4").value;
            var barcode5 = document.getElementById("barcode5").value;
            var barcode6 = document.getElementById("barcode6").value;
            var barcode7 = document.getElementById("barcode7").value;
            var barcode8 = document.getElementById("barcode8").value;
            var barcode9 = document.getElementById("barcode9").value;
            var barcode10 = document.getElementById("barcode10").value;
            var barcode11 = document.getElementById("barcode11").value;

            const array = [barcode1, barcode2, barcode3, barcode4, barcode5, barcode6, barcode7, barcode8, barcode9, barcode10, barcode11];

            var nextBarcode = Math.max(...array);

            //alert(nextBarcode);

            if (nextBarcode.toString().length == 8) {
                return nextBarcode + 1;
            }
            else {
                return "";
            }

            

        }

         $(document).ready(function () {

             //$("#treadTrackerButton").css({ "background-color": "#fff", "color": "black" })
             //$("#OpenOrderLink").css({ "background-color": "#00A4EF" });
             $('#clickThis').on('click', function () {
                 $('#sidebar').toggleClass('active');
             });

             $('#ChangedCustomerId').on('change', function () {
                 //alert("Selected");
                 var workOrderNumber = this.value;
                 $("#CustomerInfoDiv").hide();
                 $("CustomerInfoDivClick").show();
                $.ajax({
                            url: '@Url.Action("ShowEditCustInfo", "TreadTracker")',
                            data: { value: workOrderNumber },
                            type: 'POST',
                            success: function (data) {
                                $("#CustomerInfoDivClick").html(data);
                            }
                 });

             });



        });


    </script>
</body>
</html>
